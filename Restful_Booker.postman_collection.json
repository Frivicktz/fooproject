{
	"info": {
		"_postman_id": "eec502d5-8900-46a3-806c-d912ea6c1d90",
		"name": "Restful Booker",
		"description": "## Overview\nThe Restful Booker API is a sample API based on hotel bookings. The API contains endpoints to demonstrate CRUD operations. The source code can be obtained from https://github.com/mwinteringham/restful-booker\n\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Get Auth Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ebb965a-e091-4af6-9af8-02463a1303e9",
								"exec": [
									"",
									"pm.globals.set(\"my_booker_token\", pm.response.json().token);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "85908a6b-585a-4877-a4c6-a0fda0e828cf",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"password123\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						},
						"description": "Get auth token"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Bookings",
			"item": [
				{
					"name": "Get Bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e2a9a7a0-e79d-4b0a-8036-4f043c2ed658",
								"exec": [
									"var jsonData = pm.response.json();",
									"var code = 200;",
									"pm.globals.set(\"bookingID\", pm.response.json().bookingid);",
									"pm.test(\"Status code is \" + code, function () ",
									"",
									"{",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check if not empty\", function () {",
									"    pm.expect(jsonData.booking).to.not.equal(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "Get a list of all bookings"
					},
					"response": []
				},
				{
					"name": "Create new Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ab85e255-2d15-4deb-9417-8776ab9609da",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.globals.set(\"bookingID\", pm.response.json().bookingid);",
									"",
									"pm.test(\"Check firstname of new Booking\", function () {",
									"    pm.expect(jsonData.booking.firstname).to.eql(\"Sally\");",
									"});",
									"",
									"pm.test(\"check lastname of new booking\", function ()",
									"{",
									"    pm.expect(jsonData.booking.lastname).to.eql(\"Brown\");",
									"});",
									"",
									"pm.test(\"check total price of new booking\", function ()",
									"{",
									"    pm.expect(jsonData.booking.totalprice).to.eql(111);",
									"});",
									"",
									"pm.test(\"check depositpaid of new booking\", function ()",
									"{",
									"    pm.expect(jsonData.booking.depositpaid).to.eql(true);",
									"});",
									"",
									"pm.test(\"check checkin of new booking\", function ()",
									"{",
									"    pm.expect(jsonData.booking.bookingdates.checkin).to.eql(\"2013-02-23\");",
									"    ",
									"});",
									"",
									"pm.test(\"check checkout of new booking\", function ()",
									"{",
									"    pm.expect(jsonData.booking.bookingdates.checkout).to.eql(\"2014-10-23\");",
									"    ",
									"});",
									"",
									"pm.test(\"Check additionalneeds of new Booking\", function () {",
									"    pm.expect(jsonData.booking.additionalneeds).to.eql(\"Breakfast\");",
									"",
									"});",
									"",
									"",
									"var code = 200;",
									"pm.test(\"Status code is \" + code, function () ",
									"",
									"{",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7c413e33-5f04-46bc-83bc-8db82bf07ef8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstname\" : \"Sally\",\r\n  \"lastname\" : \"Brown\",\r\n  \"totalprice\" : 111,\r\n  \"depositpaid\" : true,\r\n  \"additionalneeds\" : \"Breakfast\",\r\n  \"bookingdates\" : {\r\n    \"checkin\" : \"2013-02-23\",\r\n    \"checkout\" : \"2014-10-23\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Booking by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "21ee0aa2-372c-4dbf-9317-ae7ad6ef4d8c",
								"exec": [
									"var jsonData = pm.response.json();",
									"var code = 200;",
									"",
									"pm.test(\"Status code is \" + code, function () ",
									"",
									"{",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check if not empty\", function () {",
									"    pm.expect(jsonData.booking).to.not.equal(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78e18df7-62b7-46d9-a793-6e9640855498",
								"exec": [
									"",
									"var code = 200;",
									"pm.test(\"Status code is \" + code, function () ",
									"",
									"{",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check firstname of second Booking\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"James\");",
									"});",
									"",
									"pm.test(\"check checkin of new booking\", function ()",
									"{",
									"    pm.expect(pm.response.text()).to.include(\"2018-01-01\");",
									"    ",
									"});",
									"",
									"pm.test(\"check checkout of new booking\", function ()",
									"{",
									"    pm.expect(pm.response.text()).to.include(\"2019-01-01\");",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "token={{my_booker_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" :  \"2018.01.01\",\r\n        \"checkout\" : \"2019.01.01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking (partial)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78e18df7-62b7-46d9-a793-6e9640855498",
								"exec": [
									"",
									"pm.test(\"Booking is updated\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Jim\");",
									"    ",
									"});",
									"",
									"pm.test(\"Booking is updated\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Breakfast and dinner\");",
									"    ",
									"});",
									"",
									"",
									"",
									"",
									"var code = 200;",
									"pm.test(\"Status code is \" + code, function () ",
									"",
									"{",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": "token={{my_booker_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast and dinner\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "565047c0-2425-409f-9527-a706b820ee9d",
								"exec": [
									"",
									"var url = pm.environment.get(\"url\") + \"/booking/\" +  pm.globals.get(\"bookingID\");",
									"",
									"const getRequest = {",
									"        url: url,",
									"        method: 'GET'",
									"};",
									"",
									"pm.sendRequest(getRequest, function (err, res) {",
									"    if (err) { ",
									"        console.log(err);",
									"    }",
									"    ",
									"    console.log(res);",
									"    ",
									"    pm.test('Response should be Not Found', function () {",
									"        pm.expect(res.status).to.include(\"Not Found\");",
									"    });",
									"    ",
									"    pm.test(\"Response code 404\", function() {",
									"        pm.expect(res.code).to.equal(404);",
									"    })",
									"});",
									"",
									"var code = 201;",
									"var text = \"Created\";",
									"pm.test(\"Status code is \" + code, function () ",
									"",
									"{",
									"    pm.response.to.have.status(code);",
									"});",
									"",
									"",
									"pm.test(\"Status text is \" + text, function ()",
									"{",
									"    pm.response.to.have.status(\"Created\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{my_booker_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}?=",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							],
							"query": [
								{
									"key": "",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "All bookings requests ",
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "de0423f3-d3bf-463b-9f55-1b740214ad26",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d95ca0a9-9d06-46e0-bad6-cd7589cfcdb2",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}